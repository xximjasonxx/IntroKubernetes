{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1318.3566",
      "templateHash": "275086343711837171"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]"
    },
    "adminLoginName": {
      "type": "string"
    },
    "adminPassword": {
      "type": "secureString"
    }
  },
  "variables": {
    "resourceGroupName": "rg-k8s-sampleapp"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "resourceGroupDeploy",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('resourceGroupName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1318.3566",
              "templateHash": "2798417704796914872"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2021-04-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]"
            }
          ],
          "outputs": {
            "resourceGroupName": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "identityDeploy",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "id-k8s-sampleapp"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1318.3566",
              "templateHash": "5128854674075905022"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]"
            }
          ],
          "outputs": {
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name'))]"
            },
            "objectId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name'))).principalId]"
            },
            "clientId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name'))).clientId]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "sqlserverDeploy",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "serverName": {
            "value": "sqlserver-k8s-sampleapp"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "adminLoginName": {
            "value": "[parameters('adminLoginName')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "databases": {
            "value": [
              {
                "name": "peopleDatabase",
                "sku": {
                  "name": "Standard",
                  "capacity": 20
                },
                "maxSize": "30GB"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1318.3566",
              "templateHash": "1114557856981803242"
            }
          },
          "parameters": {
            "serverName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "adminLoginName": {
              "type": "string"
            },
            "adminPassword": {
              "type": "secureString"
            },
            "databases": {
              "type": "array"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('deployServer-{0}', parameters('serverName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "serverName": {
                    "value": "[parameters('serverName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "adminLoginName": {
                    "value": "[parameters('adminLoginName')]"
                  },
                  "adminPassword": {
                    "value": "[parameters('adminPassword')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1318.3566",
                      "templateHash": "13940166508807121551"
                    }
                  },
                  "parameters": {
                    "serverName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "adminLoginName": {
                      "type": "string"
                    },
                    "adminPassword": {
                      "type": "secureString"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Sql/servers",
                      "apiVersion": "2021-08-01-preview",
                      "name": "[parameters('serverName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "administratorLogin": "[parameters('adminLoginName')]",
                        "administratorLoginPassword": "[parameters('adminPassword')]"
                      }
                    },
                    {
                      "type": "Microsoft.Sql/servers/firewallRules",
                      "apiVersion": "2021-08-01-preview",
                      "name": "[format('{0}/{1}', parameters('serverName'), 'AllowAzureServices')]",
                      "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "0.0.0.0"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "fqdn": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Sql/servers', parameters('serverName'))).fullyQualifiedDomainName]"
                    }
                  }
                }
              }
            },
            {
              "copy": {
                "name": "createdDatabases",
                "count": "[length(parameters('databases'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('deployDatabase-{0}', parameters('databases')[copyIndex()].name)]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "serverName": {
                    "value": "[parameters('serverName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "database": {
                    "value": "[parameters('databases')[copyIndex()]]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1318.3566",
                      "templateHash": "10070544539557722088"
                    }
                  },
                  "parameters": {
                    "serverName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "database": {
                      "type": "object"
                    }
                  },
                  "variables": {
                    "ranges": {
                      "KB": 1024,
                      "MB": "[mul(1024, 1024)]",
                      "GB": "[mul(mul(1024, 1024), 1024)]",
                      "TB": "[mul(mul(mul(1024, 1024), 1024), 1024)]"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Sql/servers/databases",
                      "apiVersion": "2021-08-01-preview",
                      "name": "[format('{0}/{1}', parameters('serverName'), parameters('database').name)]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "[parameters('database').sku.name]",
                        "tier": "[parameters('database').sku.name]",
                        "capacity": "[parameters('database').sku.capacity]"
                      },
                      "properties": {
                        "maxSizeBytes": "[mul(int(substring(parameters('database').maxSize, 0, sub(length(parameters('database').maxSize), 2))), variables('ranges')[substring(parameters('database').maxSize, sub(length(parameters('database').maxSize), 2))])]",
                        "collation": "SQL_Latin1_General_CP1_CI_AS",
                        "catalogCollation": "SQL_Latin1_General_CP1_CI_AS"
                      }
                    }
                  ],
                  "outputs": {
                    "databaseName": {
                      "type": "string",
                      "value": "[last(split(format('{0}/{1}', parameters('serverName'), parameters('database').name), '/'))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('deployServer-{0}', parameters('serverName')))]"
              ]
            }
          ],
          "outputs": {
            "fqdn": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('deployServer-{0}', parameters('serverName')))).outputs.fqdn.value]"
            },
            "databaseName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('deployDatabase-{0}', parameters('databases')[0].name))).outputs.databaseName.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', 'resourceGroupDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "keyVaultDeploy",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyVaultName": {
            "value": "kv-k8s-sampleapp"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "roleAssignments": {
            "value": [
              {
                "userId": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'identityDeploy')).outputs.objectId.value]",
                "roleName": "Key Vault Secrets User"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1318.3566",
              "templateHash": "17327750535076914393"
            }
          },
          "parameters": {
            "keyVaultName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "roleAssignments": {
              "type": "array",
              "defaultValue": []
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-11-01-preview",
              "name": "[parameters('keyVaultName')]",
              "location": "[parameters('location')]",
              "properties": {
                "tenantId": "[tenant().tenantId]",
                "enableRbacAuthorization": true,
                "sku": {
                  "name": "standard",
                  "family": "A"
                }
              }
            },
            {
              "copy": {
                "name": "assignments",
                "count": "[length(parameters('roleAssignments'))]"
              },
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-10-01-preview",
              "name": "[guid(subscription().id, parameters('roleAssignments')[copyIndex()].userId, parameters('roleAssignments')[copyIndex()].roleName)]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', guid(subscription().id, parameters('roleAssignments')[copyIndex()].roleName))]",
                "principalId": "[parameters('roleAssignments')[copyIndex()].userId]",
                "principalType": "User"
              }
            }
          ],
          "outputs": {
            "vaultName": {
              "type": "string",
              "value": "[parameters('keyVaultName')]"
            },
            "vaultId": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'identityDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "appServiceDeploy",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "baseName": {
            "value": "k8s-sampleapp"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "identityId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'identityDeploy')).outputs.resourceId.value]"
          },
          "appSettings": {
            "value": [
              {
                "name": "VaultName",
                "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'keyVaultDeploy')).outputs.vaultName.value]"
              },
              {
                "name": "ManagedIdentityClientId",
                "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'identityDeploy')).outputs.clientId.value]"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1318.3566",
              "templateHash": "8325802569893042936"
            }
          },
          "parameters": {
            "baseName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "identityId": {
              "type": "string"
            },
            "appSettings": {
              "type": "array"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2021-02-01",
              "name": "[format('plan-{0}', parameters('baseName'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "S1",
                "tier": "Standard",
                "capacity": 1
              },
              "kind": "linux",
              "properties": {
                "reserved": true
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2021-02-01",
              "name": "[format('app-{0}', parameters('baseName'))]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('identityId'))]": {}
                }
              },
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('plan-{0}', parameters('baseName')))]",
                "httpsOnly": false,
                "siteConfig": {
                  "linuxFxVersion": "DOTNETCORE|6.0",
                  "alwaysOn": true,
                  "appSettings": "[parameters('appSettings')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', format('plan-{0}', parameters('baseName')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'identityDeploy')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'keyVaultDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "connectionStringSecretDeploy",
      "resourceGroup": "[variables('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "dbUserName": {
            "reference": {
              "keyVault": {
                "id": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, 'rg-shared'), 'Microsoft.KeyVault/vaults', 'kv-shared-jx01')]"
              },
              "secretName": "k8sSampleDbLogin"
            }
          },
          "dbPassword": {
            "reference": {
              "keyVault": {
                "id": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, 'rg-shared'), 'Microsoft.KeyVault/vaults', 'kv-shared-jx01')]"
              },
              "secretName": "k8sSampleDbPassword"
            }
          },
          "serverDomain": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'sqlserverDeploy')).outputs.fqdn.value]"
          },
          "databaseName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'sqlserverDeploy')).outputs.databaseName.value]"
          },
          "targetKeyVaultName": {
            "value": "kv-k8s-sampleapp"
          },
          "targetKeyVaultSecretName": {
            "value": "ConnectionString"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1318.3566",
              "templateHash": "17604655285581483438"
            }
          },
          "parameters": {
            "dbUserName": {
              "type": "secureString"
            },
            "dbPassword": {
              "type": "secureString"
            },
            "serverDomain": {
              "type": "string"
            },
            "databaseName": {
              "type": "string"
            },
            "targetKeyVaultName": {
              "type": "string"
            },
            "targetKeyVaultSecretName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-11-01-preview",
              "name": "[format('{0}/{1}', parameters('targetKeyVaultName'), parameters('targetKeyVaultSecretName'))]",
              "properties": {
                "value": "[format('Server=tcp:{0},1433;Initial Catalog={1};Persist Security Info=False;User ID={2};Password={3};MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;', parameters('serverDomain'), parameters('databaseName'), parameters('dbUserName'), parameters('dbPassword'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('resourceGroupName')), 'Microsoft.Resources/deployments', 'sqlserverDeploy')]"
      ]
    }
  ]
}